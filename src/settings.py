"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from dotenv import load_dotenv
from os.path import join
from os import getenv




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(dotenv_path=BASE_DIR / ".env", override=True) 


TEMPLATES_DIRS = join(BASE_DIR, "templates")

# custom user setting
AUTH_USER_MODEL = 'authentication.User'



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n7zhxp+&x#(gln7y1sisx%tx-uc!mn!h*rt7u&e_37b&1p5b+975842'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    
    'account.apps.AccountConfig',
    'authentication.apps.AuthenticationConfig',
    'home.apps.HomeConfig',
    
    # third party apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

   
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIRS],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                 # my apps context_processor
                 'authentication.context_processors.show_pin',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Logger configuration


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,  
    "formatters": {
        'right_indented': {
            '()': 'utils.utils.RightIndentedFormatter', 
            'format': '[%(asctime)s] %(levelname)-8s %(name)-13s: [%(message)s]',
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "right_indented", 
        },
        "file": {
            "class": "logging.FileHandler",
            "filename": "emails.log",    
            "formatter": "right_indented",  
        },
    },
    "loggers": {
        "email_sender": {  
            "handlers": ["console", "file"],  
            "level": "DEBUG",  
            "propagate": False,  
        },
    },
}


# Email configuration

EMAIL_BACKEND        = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST           = getenv("EMAIL_HOST") 
EMAIL_PORT           = 587  
EMAIL_USE_TLS        = True  
EMAIL_HOST_USER      = getenv("EMAIL_HOST_USER") 
EMAIL_HOST_PASSWORD  = getenv("EMAIL_HOST_PASSWORD") 
DEFAULT_FROM_EMAIL   = EMAIL_HOST_USER  




# static files for 
STATIC_URL = 'static/'
MEDIA_URL  = 'media/'


STATICFILES_DIRS = [
    Path(BASE_DIR) / "static"
]

STATIC_ROOT = join(BASE_DIR, 'staticfiles') 
